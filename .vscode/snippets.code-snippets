{
	"transform": {
		"prefix": "transform",
		"description": "JSCodeshift transform",
	  "body": [
	    "import { ASTPath, Node, FileInfo, API, Options } from 'jscodeshift'",
	    "import pathsInRange from 'jscodeshift-paths-in-range'",
	    "",
	    "type Filter = (",
	    "  path: ASTPath<Node>,",
	    "  index: number,",
	    "  paths: Array<ASTPath<Node>>",
	    ") => boolean",
	    "",
	    "module.exports = function ${TM_FILENAME_BASE}(",
	    "  fileInfo: FileInfo,",
	    "  api: API,",
	    "  options: Options",
	    "): string | null | undefined | void {",
	    "  const j = api.jscodeshift",
	    "",
	    "  const root = j(fileInfo.source)",
	    "",
	    "  let filter: Filter",
	    "  if (options.selectionStart) {",
	    "    const selectionStart = parseInt(options.selectionStart)",
	    "    const selectionEnd = options.selectionEnd",
	    "      ? parseInt(options.selectionEnd)",
	    "      : selectionStart",
	    "    filter = pathsInRange(selectionStart, selectionEnd)",
	    "  } else {",
	    "    filter = (): boolean => true",
	    "  }",
	    "",
	    "  return root.toSource()",
	    "}",
	    ""
	  ]
	},
	"fixture": {
		"prefix": "fixture",
		"description": "Test fixture",
	  "body": [
	    "export const file = '${1:test.js}'",
	    "export const parser = '${2:babylon}'",
	    "",
	    "export const options = {",
	    "  $3",
	    "}",
	    "",
	    "export const input = `",
	    "$4",
	    "`",
	    "",
	    "export const expected = `",
	    "$5",
	    "`",
	    ""
	  ]
	}
}